name: Deploy to GCP Cloud Run

on:
  push:
    branches: [develop]

env:
  PROJECT_ID: astral-outpost-460600-p3
  REGION: us-central1
  REPO_NAME: fastapi-repo
  IMAGE_NAME: health-claims-api
  SERVICE_NAME: health-claims-api

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ env.PROJECT_ID }}

    # - name: Activate Service Account
    #   run: |
    #     echo "${{ secrets.GCP_SA_KEY }}" > key.json
    #     gcloud auth activate-service-account --key-file=key.json
    #     gcloud config set project ${{ env.PROJECT_ID }}

    - name: Configure Docker with Artifact Registry
      run: |
        gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev
        
    - name: Check current gcloud auth status
      run: gcloud auth list

    # - name: Build and push Docker image
    #   run: |
    #     docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:latest ./app
    #     docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:latest

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      run: terraform init -reconfigure
      working-directory: ./terraform

    - name: Terraform Plan
      run: terraform plan -var="docker_image=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:latest"
      working-directory: ./terraform

    - name: Terraform Apply (auto-approve)
      run: terraform apply -auto-approve -var="docker_image=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:latest"
      working-directory: ./terraform